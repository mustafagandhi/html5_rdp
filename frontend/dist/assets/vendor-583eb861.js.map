{"version":3,"file":"vendor-583eb861.js","sources":["../../node_modules/webrtc-adapter/src/js/utils.js","../../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","../../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","../../node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","../../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","../../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","../../node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","../../node_modules/webrtc-adapter/src/js/safari/safari_shim.js","../../node_modules/sdp/sdp.js","../../node_modules/webrtc-adapter/src/js/common_shim.js","../../node_modules/webrtc-adapter/src/js/adapter_core.js","../../node_modules/webrtc-adapter/src/js/adapter_factory.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseFloat(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator ||\n      !window.navigator.userAgent) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1));\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2));\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = parseInt(extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1));\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n    // Only for internal usage.\n    result._safariVersion = extractVersion(navigator.userAgent,\n      /Version\\/(\\d+(\\.?\\d+))/, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\n// Non-key-value such as telephone-events `0-15` get parsed as\n// {`0-15`:undefined}\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' &&\n      browserDetails._safariVersion >= 13.1) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n"],"names":["logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","match","length","parseFloat","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","prototype","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","this","arguments","wrappedCallback","e","modifiedEvent","handleEvent","_eventMap","Map","set","nativeRemoveEventListener","removeEventListener","has","unwrappedCb","get","delete","size","Object","keys","defineProperty","enumerable","configurable","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","isObject","val","toString","call","compactObject","data","reduce","accumulator","key","isObj","value","isEmptyObject","assign","walkStats","stats","base","resultSet","id","forEach","name","endsWith","filterStats","result","track","outbound","streamStatsType","filteredResult","trackStats","type","trackIdentifier","push","trackStat","trackId","logging","utils.log","shimGetUserMedia","browserDetails","navigator","mediaDevices","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","prefix","charAt","toUpperCase","slice","oc","mix","advanced","concat","shimConstraints_","constraints","func","version","JSON","parse","stringify","audio","remap","obj","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","then","devices","dev","filter","d","kind","find","some","label","toLowerCase","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia","onSuccess","onError","webkitGetUserMedia","bind","origGetUserMedia","cs","stream","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","_ontrack","f","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","receiver","getReceivers","event","Event","transceiver","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","map","successCallbackWrapper_","resolve","shimSenderReceiverGetStats","RTCRtpReceiver","utils.filterStats","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","signalingState","t","oldStream","method","nativeMethod","methodObj","args","desc","origSetLocalDescription","setLocalDescription","replaceExternalStreamId","origLocalDescription","getOwnPropertyDescriptor","streamid","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","utils.deprecated","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","RTCTrackEvent","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","i","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimAddTransceiver","origAddTransceiver","addTransceiver","setParametersPromises","sendEncodings","shouldPerformCheck","encodingParam","test","rid","TypeError","scaleResolutionDownBy","RangeError","maxFramerate","params","getParameters","encodings","setParameters","catch","shimGetParameters","origGetParameters","shimCreateOffer","origCreateOffer","createOffer","all","finally","shimCreateAnswer","origCreateAnswer","createAnswer","preferredMediaSource","code","mediaSource","shimLocalStreamsAPI","_localStreams","_addTrack","index","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","addIceCandidate","successCallback","failureCallback","options","promise","withCallback","candidate","_getUserMedia","shimConstraints","errcb","utils.compactObject","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","iceServers","newIceServers","server","urls","url","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","direction","setDirection","offerToReceiveVideo","videoTransceiver","shimAudioContext","AudioContext","webkitAudioContext","SDPUtils","Math","random","substring","localCName","generateIdentifier","splitLines","blob","trim","split","line","splitSections","part","getDescription","sections","getMediaSections","shift","matchPrefix","parseCandidate","parts","foundation","component","protocol","priority","parseInt","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","join","parseIceOptions","parseRtpMap","parsed","payloadType","clockRate","channels","numChannels","writeRtpMap","codec","pt","preferredPayloadType","parseExtmap","uri","attributes","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","parseCryptoLine","tag","cryptoSuite","keyParams","sessionParams","writeCryptoLine","writeCryptoKeyParams","parseCryptoKeyParams","keyMethod","keySalt","lifeTime","mkiValue","mkiLength","getCryptoParameters","getIceParameters","pwd","password","writeIceParameters","iceLite","parseRtpParameters","codecs","headerExtensions","fecMechanisms","rtcp","mline","profile","rtpmapline","fmtps","wildcardRtcpFb","existingFeedback","writeRtpDescription","caps","maxptime","extension","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","primarySsrc","secondarySsrc","flows","apt","encParam","codecPayloadType","rtx","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","cname","rsize","reducedSize","compound","mux","writeRtcpParameters","parseMsid","spec","planB","msidParts","parseSctpDescription","parseMLine","maxSizeLine","maxMessageSize","isNaN","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","substr","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","module","exports","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimRTCIceCandidateRelayProtocol","relayProtocol","shimMaxMessageSize","_sctp","browser","mLine","sctpInDescription","isFirefox","getRemoteFirefoxVersion","canSendMMS","remoteIsFirefox","canSendMaxMessageSize","getCanSendMaxMessageSize","remoteMMS","getMaxMessageSize","Number","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","byteLength","readyState","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeExtmapAllowMixed","_safariVersion","nativeSRD","shimAddIceCandidateNullOrEmpty","nativeAddIceCandidate","shimParameterlessSetLocalDescription","nativeSetLocalDescription","adapter","shimChrome","shimFirefox","shimSafari","userAgent","mozGetUserMedia","isSecureContext","supportsUnifiedPlan","RTCRtpTransceiver","utils.detectBrowser","commonShim","chromeShim","chromeShim.shimPeerConnection","browserShim","commonShim.shimAddIceCandidateNullOrEmpty","commonShim.shimParameterlessSetLocalDescription","chromeShim.shimGetUserMedia","chromeShim.shimMediaStream","chromeShim.shimOnTrack","chromeShim.shimAddTrackRemoveTrack","chromeShim.shimGetSendersWithDtmf","chromeShim.shimGetStats","chromeShim.shimSenderReceiverGetStats","chromeShim.fixNegotiationNeeded","commonShim.shimRTCIceCandidate","commonShim.shimRTCIceCandidateRelayProtocol","commonShim.shimConnectionState","commonShim.shimMaxMessageSize","commonShim.shimSendThrowTypeError","commonShim.removeExtmapAllowMixed","firefoxShim","firefoxShim.shimPeerConnection","firefoxShim.shimGetUserMedia","firefoxShim.shimOnTrack","firefoxShim.shimRemoveStream","firefoxShim.shimSenderGetStats","firefoxShim.shimReceiverGetStats","firefoxShim.shimRTCDataChannel","firefoxShim.shimAddTransceiver","firefoxShim.shimGetParameters","firefoxShim.shimCreateOffer","firefoxShim.shimCreateAnswer","safariShim","safariShim.shimRTCIceServerUrls","safariShim.shimCreateOfferLegacy","safariShim.shimCallbacksAPI","safariShim.shimLocalStreamsAPI","safariShim.shimRemoteStreamsAPI","safariShim.shimTrackEventTransceiver","safariShim.shimGetUserMedia","safariShim.shimAudioContext","adapterFactory"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}